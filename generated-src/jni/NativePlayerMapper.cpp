// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from general.djinni

#include "NativePlayerMapper.hpp"  // my header
#include "Marshal.hpp"
#include "NativePlayer.hpp"
#include "NativePlayerMapper.hpp"

namespace djinni_generated {

NativePlayerMapper::NativePlayerMapper() : ::djinni::JniInterface<::shared_objects::PlayerMapper, NativePlayerMapper>("com/mobitee/shared_objects/PlayerMapper$CppProxy") {}

NativePlayerMapper::~NativePlayerMapper() = default;


CJNIEXPORT void JNICALL Java_com_mobitee_shared_1objects_PlayerMapper_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<djinni::CppProxyHandle<::shared_objects::PlayerMapper>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_mobitee_shared_1objects_PlayerMapper_create(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::shared_objects::PlayerMapper::create();
        return ::djinni::release(::djinni_generated::NativePlayerMapper::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_com_mobitee_shared_1objects_PlayerMapper_00024CppProxy_native_1getPlayer(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_json)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::shared_objects::PlayerMapper>(nativeRef);
        auto r = ref->get_player(::djinni::String::toCpp(jniEnv, j_json));
        return ::djinni::release(::djinni_generated::NativePlayer::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
